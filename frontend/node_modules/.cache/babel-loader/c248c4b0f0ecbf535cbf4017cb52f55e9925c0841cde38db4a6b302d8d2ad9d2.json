{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  editProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._handleResponse(res));\n  }\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._handleResponse(res));\n  }\n  delCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  addCardLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  delCardLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.delCardLike(cardId);\n    } else {\n      return this.addCardLike(cardId);\n    }\n  }\n  updateAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._handleResponse(res));\n  }\n}\nconst apiConfig = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54/',\n  headers: {\n    authorization: '894ca0c1-f322-46d5-9613-0b5b161eddf9',\n    'Content-Type': 'application/json'\n  }\n};\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_handleResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","method","then","getUserInfo","editProfile","data","body","JSON","stringify","addCard","name","link","delCard","cardId","addCardLike","delCardLike","changeLikeCardStatus","isLiked","updateAvatar","apiConfig","authorization","api"],"sources":["C:/Users/dimed/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor(options) {\r\n      this._baseUrl = options.baseUrl;\r\n      this._headers = options.headers;\r\n    }\r\n    _handleResponse (res) {\r\n      if (res.ok) {\r\n        return res.json()}\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n          })\r\n          .then(res => this._handleResponse(res))\r\n        } \r\n    getUserInfo() {\r\n            return fetch(`${this._baseUrl}/users/me`, {\r\n              method: 'GET',\r\n              headers: this._headers,\r\n            })\r\n            .then(res => this._handleResponse(res))\r\n        }\r\n            \r\n    editProfile (data) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify(data)\r\n        })\r\n        .then(res => this._handleResponse(res))     \r\n    }\r\n\r\n    addCard(data) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n          method: 'POST',\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n            name: data.name,\r\n            link: data.link\r\n          })\r\n        })\r\n        .then(res => this._handleResponse(res))\r\n    }\r\n\r\n    delCard(cardId){\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n        })\r\n        .then(res => this._handleResponse(res))\r\n    }\r\n\r\n    addCardLike(cardId){\r\n      return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\r\n        method: \"PUT\",\r\n        headers: this._headers})\r\n        .then(res => this._handleResponse(res))\r\n    }\r\n\r\n    delCardLike(cardId){\r\n      return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers})\r\n        .then(res => this._handleResponse(res))\r\n    }\r\n    \r\n    changeLikeCardStatus(cardId, isLiked) {\r\n      if (isLiked) {\r\n        return this.delCardLike(cardId);\r\n      } else {\r\n        return this.addCardLike(cardId);\r\n      }\r\n    }\r\n\r\n\r\n    updateAvatar(data){\r\n       return fetch(`${this._baseUrl}users/me/avatar`, {\r\n        method: \"PATCH\",\r\n        headers: this._headers,\r\n        body: JSON.stringify(data)\r\n        })\r\n        .then(res => this._handleResponse(res))\r\n    }\r\n}\r\nconst apiConfig = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54/',\r\n  headers: {\r\n    authorization: '894ca0c1-f322-46d5-9613-0b5b161eddf9',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\nconst api = new Api(apiConfig); \r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}