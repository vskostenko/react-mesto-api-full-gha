{"ast":null,"code":"const baseUrl = 'https://auth.nomoreparties.co.';\nfunction handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\nexport function singUp(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => handleResponse(res));\n}\nexport function singIn(password, email) {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => handleResponse(res));\n}\nexport function checkToken() {\n  return fetch(`${baseUrl}/users/me`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  }).then(res => handleResponse(res));\n}\n;","map":{"version":3,"names":["baseUrl","handleResponse","res","ok","json","Promise","reject","status","singUp","password","email","fetch","method","headers","body","JSON","stringify","then","singIn","checkToken","Authorization","localStorage","getItem"],"sources":["C:/Users/dimed/dev/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["const baseUrl = 'https://auth.nomoreparties.co.';\r\n\r\nfunction handleResponse (res) {\r\n  if (res.ok) {\r\n    return res.json()}\r\n  return Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport function singUp (password,email) {\r\n    return fetch(`${baseUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        \"password\" : password,\r\n        \"email\" : email\r\n      })\r\n    }).then(res => handleResponse(res))\r\n\r\n}\r\nexport function singIn (password,email) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify({\r\n      \"password\" : password,\r\n      \"email\" : email\r\n    })\r\n  }).then(res => handleResponse(res))\r\n\r\n}\r\nexport function checkToken () {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  }).then(res => handleResponse(res))\r\n\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;AAEhD,SAASC,cAAc,CAAEC,GAAG,EAAE;EAC5B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EAAA;EACnB,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;AAEA,OAAO,SAASC,MAAM,CAAEC,QAAQ,EAACC,KAAK,EAAE;EACpC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,UAAU,EAAGP,QAAQ;MACrB,OAAO,EAAGC;IACZ,CAAC;EACH,CAAC,CAAC,CAACO,IAAI,CAACf,GAAG,IAAID,cAAc,CAACC,GAAG,CAAC,CAAC;AAEvC;AACA,OAAO,SAASgB,MAAM,CAAET,QAAQ,EAACC,KAAK,EAAE;EACtC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,UAAU,EAAGP,QAAQ;MACrB,OAAO,EAAGC;IACZ,CAAC;EACH,CAAC,CAAC,CAACO,IAAI,CAACf,GAAG,IAAID,cAAc,CAACC,GAAG,CAAC,CAAC;AAErC;AACA,OAAO,SAASiB,UAAU,GAAI;EAC5B,OAAOR,KAAK,CAAE,GAAEX,OAAQ,WAAU,EAAE;IAClCa,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCO,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;IACzD;EACF,CAAC,CAAC,CAACL,IAAI,CAACf,GAAG,IAAID,cAAc,CAACC,GAAG,CAAC,CAAC;AAErC;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}