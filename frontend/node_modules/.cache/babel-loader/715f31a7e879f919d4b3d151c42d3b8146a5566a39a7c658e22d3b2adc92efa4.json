{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimed\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from './PopupWithForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(props) {\n  _s();\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = useState('Жак Ив');\n  const [description, setDescription] = useState('Рыбак');\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    buttonCaption: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__field\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      id: \"title\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: name || '',\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error\",\n      id: \"title-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__field\",\n      type: \"text\",\n      name: \"subtitle\",\n      placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n      id: \"subtitle\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: description || '',\n      onChange: handleDescriptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error\",\n      id: \"subtitle-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(EditProfilePopup, \"zBjtI2BQAliFBHfys8g9v0hdRew=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","useState","CurrentUserContext","PopupWithForm","EditProfilePopup","props","currentUser","useContext","name","setName","description","setDescription","useEffect","about","isOpen","handleNameChange","e","target","value","handleDescriptionChange","handleSubmit","preventDefault","onUpdateUser","onClose"],"sources":["C:/Users/dimed/dev/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditProfilePopup (props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = useState('Жак Ив');\r\n    const [description, setDescription] = useState('Рыбак');\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n      }, [currentUser,props.isOpen]); \r\n    \r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n      }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n      }    \r\n    \r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();     \r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n    }   \r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Редактировать профиль\" \r\n            name=\"edit\" \r\n            buttonCaption = \"Сохранить\" \r\n            isOpen = {props.isOpen}\r\n            onClose = {props.onClose}\r\n            onSubmit = {handleSubmit}\r\n            >\r\n                <input\r\n                    className=\"popup__field\"\r\n                    type=\"text\"\r\n                    name=\"title\" \r\n                    placeholder=\"Имя\" \r\n                    id=\"title\" \r\n                    required \r\n                    minLength=\"2\" \r\n                    maxLength=\"40\" \r\n                    value={name || ''}\r\n                    onChange={handleNameChange}\r\n                 />\r\n                <span \r\n                    className=\"popup__error\" \r\n                    id=\"title-error\">\r\n                </span>\r\n                <input \r\n                    className=\"popup__field\" \r\n                    type=\"text\" \r\n                    name=\"subtitle\" \r\n                    placeholder=\"Профессия\" \r\n                    id=\"subtitle\" \r\n                    required \r\n                    minLength=\"2\"\r\n                    maxLength=\"200\" \r\n                    value={description || ''} \r\n                    onChange={handleDescriptionChange} \r\n                />\r\n                <span\r\n                    className=\"popup__error\" \r\n                    id=\"subtitle-error\">\r\n                </span>\r\n          </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,aAAa,MAAM,oBAAoB;AAAC;AAE/C,SAASC,gBAAgB,CAAEC,KAAK,EAAE;EAAA;EAE9B,MAAMC,WAAW,GAAGN,KAAK,CAACO,UAAU,CAACL,kBAAkB,CAAC;EACxD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACvDD,KAAK,CAACY,SAAS,CAAC,MAAM;IAClBH,OAAO,CAACH,WAAW,CAACE,IAAI,CAAC;IACzBG,cAAc,CAACL,WAAW,CAACO,KAAK,CAAC;EACnC,CAAC,EAAE,CAACP,WAAW,EAACD,KAAK,CAACS,MAAM,CAAC,CAAC;EAEhC,SAASC,gBAAgB,CAACC,CAAC,EAAE;IACzBP,OAAO,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB;EAEF,SAASC,uBAAuB,CAACH,CAAC,EAAE;IAChCL,cAAc,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC;EAEF,SAASE,YAAY,CAACJ,CAAC,EAAE;IACrB;IACAA,CAAC,CAACK,cAAc,EAAE;IAClB;IACAhB,KAAK,CAACiB,YAAY,CAAC;MACjBd,IAAI;MACJK,KAAK,EAAEH;IACT,CAAC,CAAC;EACN;EAEA,oBACI,QAAC,aAAa;IACV,KAAK,EAAC,2HAAuB;IAC7B,IAAI,EAAC,MAAM;IACX,aAAa,EAAG,wDAAW;IAC3B,MAAM,EAAIL,KAAK,CAACS,MAAO;IACvB,OAAO,EAAIT,KAAK,CAACkB,OAAQ;IACzB,QAAQ,EAAIH,YAAa;IAAA,wBAErB;MACI,SAAS,EAAC,cAAc;MACxB,IAAI,EAAC,MAAM;MACX,IAAI,EAAC,OAAO;MACZ,WAAW,EAAC,oBAAK;MACjB,EAAE,EAAC,OAAO;MACV,QAAQ;MACR,SAAS,EAAC,GAAG;MACb,SAAS,EAAC,IAAI;MACd,KAAK,EAAEZ,IAAI,IAAI,EAAG;MAClB,QAAQ,EAAEO;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC5B,eACH;MACI,SAAS,EAAC,cAAc;MACxB,EAAE,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QACb,eACP;MACI,SAAS,EAAC,cAAc;MACxB,IAAI,EAAC,MAAM;MACX,IAAI,EAAC,UAAU;MACf,WAAW,EAAC,wDAAW;MACvB,EAAE,EAAC,UAAU;MACb,QAAQ;MACR,SAAS,EAAC,GAAG;MACb,SAAS,EAAC,KAAK;MACf,KAAK,EAAEL,WAAW,IAAI,EAAG;MACzB,QAAQ,EAAES;IAAwB;MAAA;MAAA;MAAA;IAAA,QACpC,eACF;MACI,SAAS,EAAC,cAAc;MACxB,EAAE,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAE1B;AAAC,GAvEQf,gBAAgB;AAAA,KAAhBA,gBAAgB;AAyEzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}